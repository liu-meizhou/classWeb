version: '3'

networks:
  class_web_net:

services:

  # 后端
  go_web:
    image: ${GO_WEB_IMAGE}
    container_name: go_web
    restart: always
    working_dir: /go_web
    volumes: 
      - ${TARGET_PATH}/${GO_WEB_SOURCE_PATH}:/go_web
    environment: 
      - TZ=${SERVICE_AREA}
    networks: 
      - class_web_net
    ports:
      - "${GO_WEB_PORT}:8080"
    depends_on: 
      - postgresql
    command: 
      - sh
      - -c 
      - |
        go env -w GO111MODULE=on
        go env -w GOPROXY="https://goproxy.io,direct"
        go mod tidy
        go mod vendor
        go build -o main main.go
        ./main
  
  # 前端环境编译
  vue_admin_env:
    image: ${VUE_ADMIN_ENV_IMAGE}
    container_name: vue_admin_env
    networks: 
      - class_web_net
    working_dir: /vue-admin
    volumes: 
      - ${TARGET_PATH}/${VUE_ADMIN_SOURCE_PATH}:/vue-admin
    command: 
      - sh
      - -c
      - |
        npm install --registry=https://registry.npm.taobao.org
        npm run build:prod

  # 前端
  vue_admin_nginx:
    image: ${VUE_ADMIN_NGINX_IMAGE}
    container_name: vue_admin_nginx
    restart: always
    volumes: 
      - ${TARGET_PATH}/${VUE_ADMIN_SOURCE_PATH}/nginx.conf:/etc/nginx/conf.d/default.conf
      - ${TARGET_PATH}/${VUE_ADMIN_SOURCE_PATH}/dist/:/usr/share/nginx/html/
    environment: 
      - TZ=${SERVICE_AREA}
    networks: 
      - class_web_net
    ports: 
      - "${VUE_ADMIN_NGINX_PORT}:80"
    command: 
      - sh
      - -c
      - |
        ./is_vue_env_ok.sh
        nginx -g daemon off;
        
  # 数据库
  postgresql:
    image: ${POSTGRES_IMAGE}
    container_name: postgresql
    restart: always
    networks: 
      - class_web_net
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - PGTZ=${SERVICE_AREA}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${TARGET_PATH}/${POSTGRES_SOURCE_PATH}:/var/lib/postgresql/data

  # 自动化部署
  jenkins:
    image: ${JENKINS_IMAGE}
    container_name: jenkins
    user: ${JENKINS_USER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${JENKINS_HOME}:/var/jenkins_home/
      - ${SOURCE_PATH}:${JENKINS_TARGET_PATH}
      - ${GIT_SSH_PATH}:/${JENKINS_USER}/.ssh/
      - ${DOCKER_COMPOSE_PATH}:/usr/local/bin/docker-compose
      - ${DOCKER_PATH}:/usr/bin/docker
    ports:
      - "${JENKINS_OPEN_PORT}:8080"
      - "50000:50000"
